// default package
// Generated Mar 4, 2023, 11:48:59 PM by Hibernate Tools 6.0.0.Alpha3
package iti.jets.marketplace.models;

import iti.jets.marketplace.models.Role;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.springframework.security.core.authority.SimpleGrantedAuthority;

import static jakarta.persistence.GenerationType.IDENTITY;

/**
 * User generated by hbm2java
 */

@Data
@Builder
@AllArgsConstructor
@Entity
@Table(name="user"
    ,catalog="marketplacedb"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
public class User  implements UserDetails {

    @Id @GeneratedValue(strategy=IDENTITY)


    @Column(name="userId", unique=true, nullable=false)
     private Integer userId;


    @OneToOne(fetch=FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="addressId")
     private Address address;

    @Column(name="firstName", length=45)
     private String firstName;

    @Column(name="lastName", length=45)
     private String lastName;

    @Column(name="gender", length=45)
     private String gender;
    @Column(name="phone", length=11)
     private String phone;

    @Column(name="email", unique=true, nullable=false, length=255)
     private String email;

    @Column(name="password", nullable=false, length=255)
     private String password;

    @Column(name="creditCard", length=255)
     private String creditCard;

    @Enumerated(EnumType.STRING)
    private Role role;

    @OneToMany(fetch=FetchType.LAZY, mappedBy="user")
     private Set<Userorderproduct> userorderproducts = new HashSet<Userorderproduct>(0);

    @OneToMany(fetch=FetchType.LAZY, mappedBy="user")
     private Set<Userreviewproduct> userreviewproducts = new HashSet<Userreviewproduct>(0);

     //jwt
     private boolean AccountNonExpired = true;
     private boolean AccountNonLocked = true;
     private boolean CredentialsNonExpired = true;
     private boolean Enabled = true;
     public Collection<? extends GrantedAuthority> authorities = null;

    public User() {
    }

	
    public User(Address address, String firstName, String lastName, String email, String password) {
        this.address = address;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.password = password;

    }
    public User(Address address, String firstName, String lastName, String gender, String phone, String email, String password, String creditCard,Set<Userorderproduct> userorderproducts, Set<Userreviewproduct> userreviewproducts) {
       this.address = address;
       this.firstName = firstName;
       this.lastName = lastName;
       this.gender = gender;
       this.phone = phone;
       this.email = email;
       this.password = password;
       this.creditCard = creditCard;

       this.userorderproducts = userorderproducts;
       this.userreviewproducts = userreviewproducts;
    }
   

    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }


    public Address getAddress() {
        return this.address;

    }
    

    public void setAddress(Address address) {
        this.address = address;
    }

    

    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    

    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    

    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    

    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    

    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }


//    @Column(name="password", nullable=false, length=255)
//    public String getPassword() {
//        return this.password;
//    }

    public void setPassword(String password) {
        this.password = password;
    }

    

    public String getCreditCard() {
        return this.creditCard;
    }
    
    public void setCreditCard(String creditCard) {
        this.creditCard = creditCard;
    }




    public Set<Userorderproduct> getUserorderproducts() {
        return this.userorderproducts;
    }
    
    public void setUserorderproducts(Set<Userorderproduct> userorderproducts) {
        this.userorderproducts = userorderproducts;
    }


    public Set<Userreviewproduct> getUserreviewproducts() {
        return this.userreviewproducts;
    }
    
    public void setUserreviewproducts(Set<Userreviewproduct> userreviewproducts) {
        this.userreviewproducts = userreviewproducts;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        // return null;
        return List.of(new SimpleGrantedAuthority("ROLE_"+role.name()));
    }

    @Override

    public String getPassword() {
        return this.password;
    }

    @Override
    public String getUsername() {
        return this.email;
    }
    public void setUsername(String email){ this.email = email;}


    @Override
    public boolean isAccountNonExpired() {
        return true;
    }
    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }





}


